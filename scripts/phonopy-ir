#!/usr/bin/env python


# -------
# Imports
# -------

from argparse import ArgumentParser

from spectroscopy.utilities import eigenvectors_to_eigendisplacements

from spectroscopy.interfaces.phonopy_interface import read_born

from spectroscopy.cli.parser import update_parser, post_process_args

from spectroscopy.cli.phonopy_helper import (
    phonopy_update_parser, phonopy_load_core, phonopy_load_optional)

from spectroscopy.cli.runtime import run_mode_ir


# ----
# Main
# ----

if __name__ == "__main__":
    # Parse command-line arguments.

    parser = ArgumentParser(
        description="Simulate IR spectra from Phonopy calculations")

    # Add argument groups.

    phonopy_update_parser(parser, 'ir')
    
    # Parse and process arguments.

    args = parser.parse_args()

    post_process_args(args, 'ir')

    # Read input data.

    input_data = phonopy_load_core(
        args, extract_list=['structure', 'atomic_masses', 'phonon_modes'])

    structure = input_data['structure']
    atomic_masses = input_data['atomic_masses']
    frequencies, eigenvectors = input_data['phonon_modes']

    input_data = phonopy_load_optional(args)

    irrep_data = (input_data['irrep_data'] 
        if 'irrep_data' in input_data else None)
    
    linewidths = (input_data['linewidths'] 
        if 'linewidths' in input_data else None)

    # Convert eigenvectors to eigendisplacements.

    eigendisplacements = eigenvectors_to_eigendisplacements(
        eigenvectors, atomic_masses)

    # Read Born effective-charge tensors.

    bec_tensors = read_born(structure, file_path=args.BORNFile)

    # Hand over to the run_mode_ir() routine.

    run_mode_ir(
        frequencies, eigendisplacements, bec_tensors, args,
        linewidths=linewidths, irrep_data=irrep_data
        )
